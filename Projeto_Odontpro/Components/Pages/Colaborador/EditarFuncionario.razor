@page "/editarfuncionario/{id:int}"
@using Projeto_Odontpro.Models
@using Projeto_Odontpro.Services
@inject FuncionarioService FuncionarioService
@inject NavigationManager NavigationManager

<h3>Editar Funcionário</h3>

@if (funcionario == null)
{
    <p>Carregando...</p>
}
else
{
    <EditForm Model="funcionario" OnValidSubmit="Salvar">
        <div class="mb-3">
            <label>Nome</label>
            <InputText @bind-Value="funcionario.Nome" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Email</label>
            <InputText @bind-Value="funcionario.Email" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Telefone</label>
            <InputText @bind-Value="funcionario.Telefone" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Cargo</label>
            <InputText @bind-Value="funcionario.Cargo" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Estado</label>
            <InputText @bind-Value="funcionario.Estado" class="form-control" />
        </div>
        <button type="submit" class="btn btn-success">Salvar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }
    private Funcionario funcionario;

    protected override async Task OnInitializedAsync()
    {
        funcionario = await FuncionarioService.ObterPorId(id);
    }

    private async Task Salvar()
    {
        await FuncionarioService.Adicionar(funcionario);
        NavigationManager.NavigateTo("/ListaColaboradores");
    }

    private void Cancelar()
    {
        NavigationManager.NavigateTo("/ListaColaboradores");
    }
}