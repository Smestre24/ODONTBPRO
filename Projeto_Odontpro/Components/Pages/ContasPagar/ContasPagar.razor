@page "/contasApagar"
@inject Projeto_Odontpro.Models.FinanceiroService Financeiro

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resumo Financeiro</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #d0ebff;
            margin: 0;
            padding: 0;
        }

        .container {
            background-color: #fff;
            margin: 40px auto;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.2);
            width: 90%;
            max-width: 800px;
        }

        h2, h3 {
            text-align: center;
            color: #004d66;
        }

        .resumo {
            display: flex;
            justify-content: space-around;
            align-items: center;
            margin: 20px 0;
            flex-wrap: wrap;
            text-align: center;
            gap: 15px;
        }

            .resumo p, .saldo {
                flex: 1 1 200px;
                margin: 5px;
                font-size: 18px;
                padding: 10px 15px;
                border-radius: 10px;
                background-color: #e6f7ff;
                box-shadow: 0 3px 6px rgba(0,0,0,0.1);
            }

        .ganhos {
            color: green;
        }

        .gastos {
            color: red;
        }

        .saldo {
            background-color: #004d66;
            color: #fff;
        }

        .filtros {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
        }

        select {
            padding: 6px;
            border-radius: 5px;
        }

        .form-container {
            margin-top: 20px;
        }

        .form-group {
            margin-bottom: 10px;
        }

        input {
            width: 100%;
            padding: 6px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .form-actions {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        button {
            flex: 1;
            min-width: 120px;
            background-color: #004d66;
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px;
            cursor: pointer;
            transition: background 0.3s;
        }

            button:hover {
                background-color: #007b8a;
            }

        .msg {
            text-align: center;
            color: green;
            display: none;
            margin-top: 10px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th, td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: center;
        }

        th {
            background-color: #004d66;
            color: white;
        }
    </style>
</head>

<body>
    <div class="container">
        <h2>RESUMO FINANCEIRO</h2>

        <div class="resumo">
            <p class="ganhos">Ganhos no mês: <strong id="ganhosMes">R$ 0,00</strong></p>
            <p class="gastos">Gastos no mês: <strong id="gastosMes">R$ 0,00</strong></p>
            <div class="saldo">Saldo Atual: <strong id="saldoAtual">R$ 0,00</strong></div>
        </div>

       

        <div class="form-container">
            <h3>Adicionar Transação</h3>
            <form id="transacaoForm">
                <div class="form-group">
                    <label for="pagador">Nome do Pagador:</label>
                    <input type="text" id="pagador" placeholder="">
                </div>
                <div class="form-group">
                    <label for="valor">Valor:</label>
                    <input type="number" id="valor" placeholder="">
                </div>
                <div class="form-group">
                    <label for="descricao">Descrição:</label>
                    <input type="text" id="descricao" placeholder="">
                </div>
                <div class="form-actions">
                    <button type="submit" id="btnAdicionarGasto">Adicionar Gasto</button>
                    <button type="button" id="btnAdicionarGanho"><i class="bi bi-plus-circle"></i> Adicionar Ganho</button>
                </div>
            </form>
            <p class="msg" id="mensagem">Operação realizada com sucesso!</p>
        </div>

        <table id="tabelaTransacoes">
            <thead>
                <tr>
                    <th>Data</th>
                    <th>Nome do Pagador</th>
                    <th>Descrição</th>
                    <th>Tipo</th>
                    <th>Valor</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <script>
        const transacaoForm = document.getElementById('transacaoForm');
        const tabelaTransacoes = document.querySelector('#tabelaTransacoes tbody');
        const msgTransacao = document.getElementById('mensagem');
        const ganhosMes = document.getElementById('ganhosMes');
        const gastosMes = document.getElementById('gastosMes');
        const saldoAtual = document.getElementById('saldoAtual');

        let transacoes = [];

        function atualizarTabelaEResumo(transacao) {
            const novaLinha = `
                        <tr>
                            <td>${transacao.data}</td>
                            <td>${transacao.pagador}</td>
                            <td>${transacao.descricao}</td>
                            <td>${transacao.tipo}</td>
                            <td>R$ ${transacao.valor.toFixed(2)}</td>
                        </tr>
                    `;
            tabelaTransacoes.insertAdjacentHTML('beforeend', novaLinha);

            const ganhos = transacoes.filter(t => t.tipo === 'ganho').reduce((acc, cur) => acc + cur.valor, 0);
            const gastos = transacoes.filter(t => t.tipo === 'gasto').reduce((acc, cur) => acc + cur.valor, 0);
            const saldo = ganhos - gastos;

            ganhosMes.textContent = ganhos.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
            gastosMes.textContent = gastos.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
            saldoAtual.textContent = saldo.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });

            msgTransacao.textContent = transacao.tipo === 'ganho' ? "Ganho adicionado!" : "Gasto adicionado!";
            msgTransacao.style.color = "green";
            msgTransacao.style.display = "block";
            setTimeout(() => msgTransacao.style.display = "none", 3000);
        }

       
        transacaoForm.addEventListener('submit', function (e) {
            e.preventDefault();
            const pagador = document.getElementById('pagador').value;
            const descricao = document.getElementById('descricao').value;
            const valor = parseFloat(document.getElementById('valor').value);

            if (!pagador || !descricao || isNaN(valor)) {
                msgTransacao.textContent = "Preencha todos os campos corretamente!";
                msgTransacao.style.color = "red";
                msgTransacao.style.display = "block";
                setTimeout(() => msgTransacao.style.display = "none", 3000);
                return;
            }

            const transacao = {
                data: new Date().toLocaleDateString(),
                pagador,
                descricao,
                valor,
                tipo: 'gasto'
            };
            transacoes.push(transacao);
            atualizarTabelaEResumo(transacao);
            transacaoForm.reset();
        });

       
        document.getElementById('btnAdicionarGanho').addEventListener('click', () => {
            const pagador = document.getElementById('pagador').value;
            const descricao = document.getElementById('descricao').value;
            const valor = parseFloat(document.getElementById('valor').value);

            if (!pagador || !descricao || isNaN(valor)) {
                msgTransacao.textContent = "Preencha todos os campos corretamente!";
                msgTransacao.style.color = "red";
                msgTransacao.style.display = "block";
                setTimeout(() => msgTransacao.style.display = "none", 3000);
                return;
            }

            const transacao = {
                data: new Date().toLocaleDateString(),
                pagador,
                descricao,
                valor,
                tipo: 'ganho'
            };
            transacoes.push(transacao);
            atualizarTabelaEResumo(transacao);
            transacaoForm.reset();
        });
    </script>
</body>
</html>
